.build_template: &build_template
  stage: build
  tags:
    - build
  image: ${IMAGE}
  variables:
    # Enable ccache for all build jobs. See configure_ci_environment.sh for more ccache related settings.
    IDF_CCACHE_ENABLE: "1"
    BATCH_BUILD: "1"
    V: "0"
    WARNING_STR: ""

.build_ops_template: &build_ops_template
  <<: *build_template
  artifacts:
    when: always
    paths:
      - "**/build*/*.bin"
      # upload to s3 server to save the artifacts size
      #- "**/build*/*.map"
      #- "**/build*/*.elf"
      - "**/build*/flasher_args.json"
      - "**/build*/flash_project_args"
      - "**/build*/config/sdkconfig.json"
      - "**/build*/bootloader/*.bin"
      #- "**/build*/bootloader/*.elf"
      - "**/build*/partition_table/*.bin"
      - "**/build*/espdl_models/*.espdl"
    expire_in: 1 week
  variables:
    IDF_CI_BUILD: "1"
      # By configuring this macro, you can append the compiled configuration file.
    # For example, using "sdkconf.etc=default" specifies the default sdkconfig file.
    EXAMPLE_CONFIG: "="
  script:
    - pip install --upgrade idf-component-manager
    - pip install idf_build_apps==2.4.3
    - python test_apps/build_apps.py ${EXAMPLE_DIR} -m ${MODEL_PATH} -t ${TARGET} -vv

.build_examples_template: &build_examples_template
  <<: *build_template
  artifacts:
    when: always
    paths:
      - "**/build*/*.bin"
      # upload to s3 server to save the artifacts size
      # - "**/build*/*.map"
      # - "**/build*/*.elf"
      - "**/build*/flasher_args.json"
      - "**/build*/flash_project_args"
      - "**/build*/config/sdkconfig.json"
      - "**/build*/bootloader/*.bin"
      - "**/build*/bootloader/*.elf"
      - "**/build*/partition_table/*.bin"
      - "**/build*/espdl_models/*.espdl"
    expire_in: 1 week
  variables:
    IDF_CI_BUILD: "1"
      # By configuring this macro, you can append the compiled configuration file.
    # For example, using "sdkconf.etc=default" specifies the default sdkconfig file.
    EXAMPLE_CONFIG: "="
  script:
    - pip install --upgrade idf-component-manager
    - pip install idf_build_apps==2.4.3
    - python test_apps/build_apps.py ${EXAMPLE_DIR} -t ${TARGET} -vv

build_espdl_ops:
  extends:
    - .build_ops_template
    - .rules:build:espdl_ops
  needs:
    - job: "gen_espdl_ops_cases"
      artifacts: true
      optional: true
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3, esp32]
  variables:
    EXAMPLE_DIR: test_apps/esp-dl
    MODEL_PATH: test_apps/esp-dl/models

build_dl_image:
  extends:
    - .build_examples_template
    - .rules:build:dl_image
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: test_apps/dl_image

build_example_human_face_recognition:
  extends:
    - .build_examples_template
    - .rules:build:example_human_face_recognition
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/human_face_recognition
  
build_example_human_face_detect:
  extends:
    - .build_examples_template
    - .rules:build:example_human_face_detect
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/human_face_detect

build_example_mobilenetv2_cls:
  extends:
    - .build_examples_template
    - .rules:build:example_mobilenetv2_cls
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/mobilenetv2_cls

.build_docs_template:
  stage: build
  image: "$CI_DOCKER_REGISTRY/esp-idf-doc-env-v5.3:1-1"

build_example_pedestrian_detect:
  extends:
    - .build_examples_template
    - .rules:build:example_pedestrian_detect
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/pedestrian_detect

build_example_yolo11_detect:
  extends:
    - .build_examples_template
    - .rules:build:example_yolo11_detect
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/yolo11_detect

build_example_yolo11_pose:
  extends:
    - .build_examples_template
    - .rules:build:example_yolo11_pose
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/yolo11_pose

build_example_cat_detect:
  extends:
    - .build_examples_template
    - .rules:build:example_cat_detect
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/cat_detect

build_example_how_to_run_model:
  extends:
    - .build_examples_template
    - .rules:build:example_how_to_run_model
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/tutorial/how_to_run_model

build_example_model_in_flash_partition:
  extends:
    - .build_examples_template
    - .rules:build:example_model_in_flash_partition
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/tutorial/how_to_load_test_profile_model/model_in_flash_partition

build_example_model_in_flash_rodata:
  extends:
    - .build_examples_template
    - .rules:build:example_model_in_flash_rodata
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/tutorial/how_to_load_test_profile_model/model_in_flash_rodata

build_example_model_in_sdcard:
  extends:
    - .build_examples_template
    - .rules:build:example_model_in_sdcard
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/tutorial/how_to_load_test_profile_model/model_in_sdcard

build_example_how_to_run_streaming_model:
  extends:
    - .build_examples_template
    - .rules:build:example_how_to_run_streaming_model
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3]
  variables:
    EXAMPLE_DIR: examples/tutorial/how_to_run_streaming_model

build_esp_dl_html:
  extends:
    - .build_docs_template
    - .rules:build:docs
  variables:
    DOCS_DIR: $CI_PROJECT_DIR/docs
  artifacts:
    when: always
    paths:
      - $DOCS_DIR/_build/*/*/html/*
      - $DOCS_DIR/_build/*/*/*.txt
    expire_in: 4 days
  script:
    - cd $DOCS_DIR
    - bash ./check_lang_folder_sync.sh
    - pip install -r requirements.txt
    - build-docs --skip-reqs-check -l $DOCLANG
    - echo "ESP-DL documentation preview available at $CI_JOB_URL/artifacts/file/docs/_build/$DOCLANG/$DOCTGT/html/index.html"
  parallel:
    matrix:
      - DOCLANG: ["en", "zh_CN"]

build_esp_dl_pdf:
  extends:
    - .build_docs_template
    - .rules:build:docs
  variables:
    DOCS_DIR: $CI_PROJECT_DIR/docs
  artifacts:
    when: always
    paths:
      - $DOCS_DIR/_build/*/*/latex/*
      - $DOCS_DIR/_build/*/*/*.txt
    expire_in: 4 days
  script:
    - cd $DOCS_DIR
    - bash ./check_lang_folder_sync.sh
    - pip install -r requirements.txt
    - build-docs --skip-reqs-check -bs latex -l $DOCLANG
  parallel:
    matrix:
      - DOCLANG: ["en", "zh_CN"]


build_dl_fft:
  extends:
    - .build_examples_template
    - .rules:build:test_dl_fft
  parallel:
    matrix:
      - IMAGE: [espressif/idf:release-v5.3, espressif/idf:latest]
        TARGET: [esp32p4, esp32s3, esp32c3, esp32]
  variables:
    EXAMPLE_DIR: test_apps/dl_fft